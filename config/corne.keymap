
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &kp TAB   &kp Q   &kp W   &kp E           &kp R      &kp T            &kp Y       &kp U          &kp I       &kp O          &kp P        &kp ESC
 &kp LCTRL   &kp A   &kp S   &kp D           &kp F      &kp G            &kp H       &kp J          &kp K       &kp L  &kp SEMICOLON      &kp ENTER
  &kp LALT   &kp Z   &kp X   &kp C           &kp V      &kp B            &kp N       &kp M      &kp COMMA  &kp PERIOD      &kp SLASH  &kp RIGHT_GUI
                             &mo 1  &kp LEFT_SHIFT  &kp SPACE            &mo 2  &kp RSHIFT  &kp BACKSPACE
            >;
        };

        layer_Function_Left {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans            &trans  &trans  &trans
            >;
        };

        layer_Function_Right {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans            &trans  &trans  &trans
            >;
        };

        layer_Control {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans            &trans  &trans  &trans
            >;
        };

    };
};
